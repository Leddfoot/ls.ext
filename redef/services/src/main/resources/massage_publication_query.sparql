PREFIX deich: <__ONTOLOGY__>
PREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX  role: <http://data.deichman.no/role#>

CONSTRUCT {
        ?pub a deich:Publication ;
               deich:mainTitle ?pubMainTitle ;
               deich:partTitle ?pubPartTitle ;
               deich:norwegianTitle ?norwegianTitle ;
               deich:englishTitle ?enlishTitle ;
               deich:language ?language ;
               deich:format ?format ;
               deich:publicationYear ?pubPublicationYear ;
               deich:firstPublicationYear ?workPublicationYear ;
               deich:audience ?audience ;
               deich:hasHoldingBranch ?branch ;
               deich:contributor ?contrib ;
               deich:hasImage ?img ;
               deich:hasImageAll ?allImg ;
               deich:hasMediaTypeAll ?mediaType ;
               deich:workUri ?workUri ;
               deich:subject ?subjectLabel ;
               deich:genre ?genreLabel ;
               deich:audience ?audience ;
               deich:agents ?contribAgentName ;
               ?contribRoleURI ?contribAgentName ;
               deich:mainEntryName ?mainEntryName ;
               deich:recordID ?recordId ;
               deich:abstract ?abstract ;
               deich:formatNo ?formatNo ;
               deich:ageLimit ?ageLimit ;
               deich:series ?seriesTitle ;
               deich:dewey ?dewey ;
               deich:nationality ?nationLabel .
  ?mediaType a deich:Mediatype ;
               deich:format ?mtFormat .
    ?contrib a deich:Contribution ;
               deich:role ?contribRole ;
               deich:agent ?contribAgent ;
               deich:mainEntry ?mainEntry .
?contribAgent a deich:Agent ;
               deich:name ?contribAgentName ;
               deich:birthYear ?contribAgentBirthYear ;
               deich:deathYear ?contribAgentDeathYear .
}
WHERE {
  BIND(uri("__PUBLICATIONURI__") AS ?pub)

  ?pub a deich:Publication ;
       deich:publicationOf ?work ;
       deich:recordID ?recordId .

  BIND(str(?work) AS ?workUri )

  { ?work deich:audience ?audienceO . BIND(str(?audienceO) AS ?audience) }
  UNION { ?work deich:publicationYear ?workYear . BIND(str(?workYear) AS ?workPublicationYear) }

  UNION {
      ?p deich:publicationOf ?work .
      ?work deich:hasClassification ?classEntry .
      ?classEntry deich:hasClassificationNumber ?dewey .
  }

  UNION {
    ?p deich:publicationOf ?work ;
       deich:mainTitle ?norwegianMainTitle ;
       deich:language <http://lexvo.org/id/iso639-3/nob> .
    OPTIONAL {
    ?p deich:publicationOf ?work ;
           deich:partTitle ?norwegianPartTitle ;
           deich:language <http://lexvo.org/id/iso639-3/nob> .
    }
    BIND(IF(BOUND(?norwegianPartTitle), CONCAT(?norwegianMainTitle, " — ", ?norwegianPartTitle), ?norwegianMainTitle) AS ?norwegianTitle)
  }

  UNION {
    ?p2 deich:publicationOf ?work ;
       deich:mainTitle ?englishMainTitle ;
       deich:language <http://lexvo.org/id/iso639-3/eng> .
    OPTIONAL {
        ?p2 deich:publicationOf ?work ;
               deich:partTitle ?englishPartTitle ;
               deich:language <http://lexvo.org/id/iso639-3/eng> .
        }
        BIND(IF(BOUND(?englishPartTitle), CONCAT(?englishMainTitle, " — ", ?englishPartTitle), ?englishMainTitle) AS ?norwegianTitle)
  }

  UNION {
      ?p3 deich:publicationOf ?work ;
         deich:hasImage ?allImg .
    }

  UNION {
        ?p4 deich:publicationOf ?work ;
           deich:hasMediaType ?mediaType .
        OPTIONAL {
          ?p4 deich:format ?mtFormatO .
          BIND(str(?mtFormatO) AS ?mtFormat)
        }
      }

  UNION {
    {
      ?work deich:subject ?subject .
      ?subject a deich:Subject ;
              deich:prefLabel ?subjectName  .
    } UNION {
      ?work deich:subject ?subject .
            ?subject a deich:Place ;
                    deich:prefLabel ?subjectName  .
    } UNION {
      ?work deich:subject ?subject .
      ?subject a deich:Work ;
              deich:mainTitle ?subjectName  .
    } UNION {
      ?work deich:subject ?subject .
      ?subject a deich:Person ;
              deich:name ?subjectName  .
    } UNION
    { ?work deich:subject ?subject . ?subject deich:specification ?subjectSpec }
    BIND(IF(BOUND(?subjectSpec), CONCAT(?subjectName, " (", ?subjectSpec, ")"), ?subjectName) AS ?subjectLabel)
  }

  UNION {
      ?work deich:genre ?genre .
      ?genre a deich:Genre ;
            deich:prefLabel ?genreName  .
      OPTIONAL { ?work deich:genre ?genre. ?genre deich:specification ?genreSpec }
      BIND(IF(BOUND(?genreSpec), CONCAT(?genreName, " (", ?genreSpec, ")"), ?genreName) AS ?genreLabel)
    }

  UNION { ?pub deich:mainTitle ?pubMainTitle }
  UNION { ?pub deich:partTitle ?pubPartTitle }
  UNION { ?pub deich:hasHoldingBranch ?branch }
  UNION {

             { ?pub deich:contributor ?contrib } UNION { ?work deich:contributor ?contrib }
             ?contrib a deich:Contribution ;
                      deich:agent ?contribAgent ;
                      deich:role ?contribRoleURI .
             ?contribAgent deich:name ?contribAgentName .
             BIND(str(?contribRoleURI) AS ?contribRole)
             OPTIONAL {
                ?contrib a deich:MainEntry .
                BIND(true as ?mainEntry) .
                ?contribAgent deich:name ?mainEntryName .
                OPTIONAL { ?contribAgent deich:nationality ?nationality . ?nationality rdfs:label ?nationLabelLang .
                  BIND(str(?nationLabelLang) AS ?nationLabel)
                  FILTER(lang(?nationLabelLang) = "no")
                }
             }
  }

  UNION { ?pub deich:inSerial ?serialBnode .
             ?serialBnode deich:serial ?serial .
             ?serial deich:mainTitle ?seriesTitle . }

  UNION { ?contribAgent deich:birthYear ?pBirthYearO . BIND(str(?pBirthYearO) AS ?contribAgentBirthYear) }
  UNION { ?contribAgent deich:deathYear ?pDeathYearO . BIND(str(?pDeathYearO) AS ?contribAgentDeathYear) }

  UNION { ?pub deich:language ?languageO . BIND(str(?languageO) AS ?language) }
  UNION { ?pub deich:format ?formatO . BIND(str(?formatO) AS ?format) }
  UNION { ?pub deich:format ?formatURI .
             ?formatURI rdfs:label ?formatNoLang .
             BIND(str(?formatNoLang) AS ?formatNo)
             FILTER(lang(?formatNoLang) = "no") }
  UNION { ?pub deich:publicationYear ?pubPublicationYearO . BIND(str(?pubPublicationYearO) AS ?pubPublicationYear) }
  UNION { ?pub deich:hasImage ?img }
  UNION { ?pub deich:abstract ?abstract }
  UNION { ?pub deich:ageLimit ?maybeAgeLimit
  BIND(IF(BOUND(?maybeAgeLimit), ?maybeAgeLimit, "0") AS ?ageLimit)
  }
}