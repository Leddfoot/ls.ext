# SKELETON FOR ALL MIGRATION COMMANDS
{% set q = "\"" %}
{% set docker_args = "sudo docker run --rm --link koha_mysql_container:db -v /var/migration_workdir:/migration/data -t deichman/migration:"+pillar['migration']['image-tag']+" /bin/sh -c" %}
# FOR TESTING, USE A LOCALLY BUILD MIGRATION IMAGE TAGGED digibib/migration:latest
# {% set docker_args = "sudo docker run --rm --link koha_mysql_container:db -v /var/migration_workdir:/migration/data -t digibib/migration:latest /bin/sh -c" %}
{% set mysql_args = "mysql --default-character-set=utf8 --local-infile=1 -u "+pillar['koha']['adminuser']+" -h db -p"+pillar['koha']['adminpass']+" koha_"+pillar['koha']['instance']+" 2> /dev/null" %}

{% set curl_args = "curl -s -w \"%{time_total}\" " %}

{% macro migration(id,args) %}
# RUN MYSQL IMPORT COMMAND
{% if args.mysql_import is defined and args.mysql_import %}
{{ id }}:
  cmd.run:
    - name: {{ docker_args }} {{q}} {{ mysql_args}} < {{ args.mysql_import['file'] }} {{q}}
    - failhard: True
{% endif %}

# RUN CURL COMMAND
{% if args.curl_cmd is defined and args.curl_cmd %}
{{ id }}:
  cmd.run:
    - name: {{ docker_args }} {{q}} {{ args.curl_cmd['pre_cmd']|default("") }} {{ curl_args }} -X {{ args.curl_cmd['method'] }} {{ args.curl_cmd['digest']|default("") }} {{ args.curl_cmd['headers']|default("") }} -G {{ args.curl_cmd['url'] }} {{ args.curl_cmd['params']|default("") }} {{ args.curl_cmd['post_cmd']|default("") }} {{q}}
    - failhard: True
{% endif %}

# RUN CURL UPLOAD
{% if args.curl_upload is defined and args.curl_upload %}
{{ id }}:
  cmd.run:
    - name: {{ docker_args }} {{q}} {{ args.curl_upload['pre_cmd']|default("") }} {{ curl_args }} -X {{ args.curl_upload['method'] }} {{ args.curl_upload['digest']|default("") }} {{ args.curl_upload['headers']|default("") }} -G {{ args.curl_upload['url'] }} {{ args.curl_upload['params']|default("") }} -T {{ args.curl_upload['file'] }} {{q}}
    - failhard: True
{% endif %}

# RUN ARBITRARY DOCKER COMMAND
{% if args.docker_cmd is defined and args.docker_cmd %}
{{ id }}:
  cmd.run:
    - name: {{ docker_args }} {{q}} {{ args.docker_cmd }} {{q}} 
    - failhard: True
{% endif %}
{% endmacro %}