# Construct hasPublicationPart bnodes from added entries with titles

SPARQL
PREFIX : <http://data.deichman.no/ontology#>
PREFIX migration: <http://migration.deichman.no/>
PREFIX role: <http://data.deichman.no/role#>
PREFIX duo: <http://data.deichman.no/duo#>

WITH <http://deichman.no/migration>

MODIFY

DELETE {
	?publication migration:hasPart ?part .
	?part migration:agent ?agent ;
		migration:mainTitle ?mainTitle ;
		migration:startsAtPage ?startPage ;
		migration:endsAtPage ?endPage ;
		a migration:agentTitleEntry .
}

INSERT {
	?publication :hasPublicationPart [
		:agent ?agent ;
		:role role:author ;
		:mainTitle ?mainTitle ;
		:startsAtPage ?startPage ;
		:endsAtPage ?endPage ;
		:publicationOf `IRI(CONCAT("http://data.deichman.no/work/w", MD5(LCASE(CONCAT(?id, ?mainTitle)))))` ;
		a :PublicationPart
	] .	
}

WHERE {
	?publication migration:hasPart ?part .
	?part migration:agent ?agent ;
		migration:mainTitle ?mainTitle ;
		a migration:agentTitleEntry .
	?agent duo:bibliofilAuthorityId ?id .
	OPTIONAL {?part migration:startsAtPage ?startPage .}
	OPTIONAL {?part migration:endsAtPage ?endPage .}
}
;


# Construct isRelatedTo bnodes from added entries with titles

SPARQL
PREFIX : <http://data.deichman.no/ontology#>
PREFIX migration: <http://migration.deichman.no/>
PREFIX relationType: <http://data.deichman.no/relationType#>
PREFIX duo: <http://data.deichman.no/duo#>

WITH <http://deichman.no/migration>

MODIFY

DELETE {
	?publication migration:basedOn ?work .
	?work migration:agent ?agent ;
		migration:mainTitle ?mainTitle ;
		a migration:agentTitleEntry .
}

INSERT {
	?publication :isRelatedTo [
		:work `IRI(CONCAT("http://data.deichman.no/work/w", MD5(LCASE(CONCAT(?id, ?mainTitle)))))` ;
		:hasRelation relationType:basedOn ;
		a :WorkRelation
	] .
	`IRI(CONCAT("http://data.deichman.no/work/w", MD5(LCASE(CONCAT(?id, ?mainTitle)))))` a :Work ;
		:mainTitle ?mainTitle ;
		:contributor [
			a :MainEntry, :Contribution ;
			:agent ?agent 
		] .
}

WHERE {
	?publication migration:basedOn ?work .
	?work migration:agent ?agent ;
		migration:mainTitle ?mainTitle ;
		a migration:agentTitleEntry .
	?agent duo:bibliofilAuthorityId ?id .
}
;
