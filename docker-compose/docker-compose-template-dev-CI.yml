---
version: '2'

networks:
  backend:
    driver: bridge

services:
  koha:
    container_name: koha_container
    image: "digibib/koha:${KOHA_IMAGE_TAG}"
    networks:
      - backend
    depends_on:
      - koha_mysql
      - sms
      - smtp
      - sip
    cap_add:
      - SYS_NICE
      - DAC_READ_SEARCH
      - MKNOD
    environment:
      KOHA_ADMINPASS: "${KOHA_ADMINPASS}"
      KOHA_ADMINUSER: "${KOHA_ADMINUSER}"
      KOHA_INSTANCE: "$KOHA_INSTANCE"
      KOHA_DBHOST: koha_mysql
      DEFAULT_LANGUAGE: nb-NO
      EMAIL_ENABLED: "True"
      SMTP_SERVER_HOST: mailrelay # access through network 'backend' 
      SMTP_SERVER_PORT: 2525
      MESSAGE_QUEUE_FREQUENCY: 1
      SMS_SERVER_HOST: "${SMS_SERVER_HOST}"
    ports:
      - "6001:6001"
      - "8080:8080"
      - "8081:8081"
    volumes:
      - "/var/migration_workdir:/var/migration_workdir:rw"

  koha_mysql:
    container_name: koha_mysql
    image: mysql:5.6.20
    networks:
      - backend
    cap_add:
      - MKNOD
    command:
      - mysqld
      - "--datadir=/var/lib/mysql"
      - "--user=mysql"
      - "--max_allowed_packet=64M"
      - "--wait_timeout=6000"
      - "--bind-address=0.0.0.0"
    environment:
      MYSQL_DATABASE: "koha_${KOHA_INSTANCE}"
      MYSQL_PASSWORD: "${KOHA_ADMINPASS}"
      MYSQL_ROOT_PASSWORD: "${KOHA_ADMINPASS}"
      MYSQL_USER: "${KOHA_ADMINUSER}"
    ports:
      - "3306:3306"
    volumes_from:
      - koha_mysql_data

  koha_mysql_data:
    container_name: koha_mysql_data
    image: "busybox:latest"
    volumes:
      - /var/lib/mysql

  smtp:
    container_name: mailrelay
    image: "digibib/gosmtpd:e51ec0b872867560461ab1e8c12b10fd63f5d3c1"
    networks:
      - backend
    ports:
      - "8100:8000"

  sms:
    container_name: smsproxy
    image: "digibib/tcp-proxy:7660632e2afa09593941fd35ba09d6c3a948f342"
    networks:
      - backend
    ports:
      - "8101:9999" # Can be removed, as we use docker networking for access
    command:
      - "/app/tcp-proxy"
      - "-vv"
      - "-r"
      - "${SMS_FORWARD_URL}"

  tcpsink: # Fake webserver response, for testing
    container_name: tcpsink
    image: "alpine:3.3"
    networks:
      - backend
    ports:
      - "9999:9999"
    command:
      - "/bin/sh"
      - "-c"
      - "mkfifo pipe; while true ; do { read line<pipe;echo -e 'HTTP/1.1 200 OK\\r\\n' ; } | nc -l -p 9999 > pipe; done"

  elasticsearch_data:
    container_name: elasticsearch_data
    image: "busybox:latest"
    volumes:
      - /usr/share/elasticsearch/data

  elasticsearch:
    container_name: elasticsearch_container
    image: elasticsearch:2.2.0
    networks:
      - backend
    ports:
      - "8200:9200"
      - "8300:9300"
    command:
      - "elasticsearch"
      - "--network.host"
      - "_non_loopback_"
    volumes_from:
      - elasticsearch_data

  fuseki_data:
    container_name: fuseki_data
    image: "busybox:latest"
    volumes:
      - /data

  fuseki:
    container_name: fuseki_container
    image: fisch42/fuseki
    networks:
      - backend
    ports:
      - "3030:3030"
    volumes_from:
      - fuseki_data

  sip:
    container_name: sip_proxy_container
    image: "digibib/biblio-sip2:${SIP_IMAGE_TAG}"
    networks:
      - backend
    ports:
      - "6002:6001"
    environment:
      USE_LOCAL_MODS: "True"
      SIPSERVER_HOST_PORT: "${HOST}:${SIP_PORT}"

  catalinker:
    container_name: redef_catalinker_container
    build:
      context: /vagrant/redef/catalinker
      dockerfile: Dockerfile
    networks:
      - backend
    depends_on:
      - services
      - z3950proxy
    ports:
      - "8010:8010"
    environment:
      KOHA_OPAC_PORT: "http://${HOST}:8080"
      KOHA_INTRA_PORT: "http://${HOST}:8081"
      SERVICES_PORT: "http://services:8005"

  services:
    container_name: redef_services_container
    image: "digibib/redef-services"
    networks:
      - backend
    depends_on:
      - fuseki
      - elasticsearch
      - koha
    ports:
      - "8005:8005"
      - "8006:8006"
      - "5070:5070"
    environment:
      JAVA_OPTS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5070 \
      -DKOHA_USER=${KOHA_ADMINUSER} \
      -DKOHA_PASSWORD=${KOHA_ADMINPASS} \
      -DKOHA_PORT=http://koha:8081 \
      -DTRIPLESTORE_PORT=http://fuseki:${TRIPLESTORE_PORT} \
      -DELASTICSEARCH_URL=http://elasticsearch:9200 \
      -DDATA_BASEURI=${DATA_BASEURI}"

  patron-client:
    container_name: redef_patron_client_container
    build:
      context: /vagrant/redef/patron-client
      dockerfile: Dockerfile
    networks:
      - backend
    depends_on:
      - elasticsearch
      - services
    ports:
      - "8000:8000"
    environment:
      SERVICES_PORT: "http://${HOST}:${SERVICES_PORT}"

  overview:
    container_name: overview_container
    build:
      context: /vagrant/redef/overview
    networks:
      - backend
    ports:
      - "${OVERVIEW_PORT}:${OVERVIEW_PORT}"
    environment:
      HOST: "${HOST}"
      PATRON_CLIENT_PORT: "8000"
      SERVICES_PORT: "8005"
      CATALINKER_PORT: "8010"
      KOHA_OPAC_PORT: "8080"
      KOHA_INTRA_PORT: "8081"
      JAMON_PORT: "5070"
      TRIPLESTORE_PORT: "${TRIPLESTORE_PORT}"
      ELASTICSEARCH_PORT: "${ELASTICSEARCH_PORT}"
      KOHA_VERSION: "${KOHA_IMAGE_TAG}"
      GITREF: "${GITREF}"
      BUILD_TAG: "${BUILD_TAG}"

  cuke_tests:
    container_name: cuke_tests
    build:
      context: /vagrant/test
    networks:
      - backend
    volumes:
      - /usr/bin/docker:/usr/bin/docker
      - /var/run/docker.sock:/var/run/docker.sock
      - /lib/x86_64-linux-gnu/libsystemd-journal.so.0:/lib/x86_64-linux-gnu/libsystemd-journal.so.0
      - /vagrant/pillar:/srv/pillar
      - /vagrant/test:/tests
    environment:
      HOST: "${HOST}"
      KOHA_ADMINPASS: "${KOHA_ADMINPASS}"
      KOHA_ADMINUSER: "${KOHA_ADMINUSER}"
      KOHA_INSTANCE: "${KOHA_INSTANCE}"

  z3950proxy:
    container_name: z3950proxy
    image: "digibib/z3950proxy"
    networks:
      - backend
    environment:
      APPSECRET: "${Z3950SECRET}"
      BS_SERVER: "${BS_SERVER}"
      BS_PORT: "${BS_PORT}"
      BS_DB: "${BS_DB}"
      BS_USER: "${BS_USER}"
      BS_PASS: "${BS_PASS}"
